Description: CD12352 - Infrastructure as Code Project - Heidi Popovic - Udagram

Parameters:
  ProjectName:
    Type: String
    Description: Tag name for udagram resources
    Default: project2-infra-as-code

  AsgDesiredCapacity:
    Type: String
    Description: Desired number of EC2 instances to be created in the Autoscaling Group
    Default: 1

  AsgImageId:
    Type: String
    Description: Image ID to use in creation of the EC2 instances in the Autoscaling Group

  BastionAccessIP:
    Type: String
    Description: IP to use to allow bastion access
    Default: 0.0.0.0/0

  BastionKeyName:
    Type: String
    Description: Name of the key pair created to connect via bastion to instances
    Default: BastionKeyPair

  BastionImageId:
    Type: String
    Description: Image ID to use in creation of the bastion host

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Ref ProjectName
      VpcId:
        Fn::ImportValue:
          !Sub "${ProjectName}-vpc-id"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        SourceSecurityGroupId: !Ref LoadBalancerSecurityGroup
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        SourceSecurityGroupId: !Ref BastionSecurityGroup
  
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties: 
      LaunchTemplateData:
        UserData:
          Fn::Base64: |
            #!/bin/bash

            apt-get update -y

            sudo apt-get install nginx -y

            service nginx start
            
            WEB_DIR="/var/www/html"
           
            sudo rm -r $WEB_DIR/index.*

            sudo snap install aws-cli --classic

            aws s3 cp s3://project2-infra-as-code-udagram-4829/index.html index.html

            sudo cp index.html $WEB_DIR

            sudo systemctl reload nginx

        ImageId: !Ref AsgImageId
        SecurityGroupIds:
          - !Ref SecurityGroup
        InstanceType: t2.micro
        BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: '10'
        IamInstanceProfile:
          Name: !Ref InstanceProfile
        KeyName: !Ref BastionKeyName
        
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue: 
          !Sub "${ProjectName}-private-subnets"
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      MinSize: '1'
      DesiredCapacity: !Ref AsgDesiredCapacity
      MaxSize: '6'
      TargetGroupARNs:
      - Ref: TargetGroup

  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http access to our load balancer
      VpcId:
        Fn::ImportValue:
          !Sub "${ProjectName}-vpc-id"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
  
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue: !Sub "${ProjectName}-public-subnet-1"
      - Fn::ImportValue: !Sub "${ProjectName}-public-subnet-2"
      SecurityGroups:
      - Ref: LoadBalancerSecurityGroup
  
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: TargetGroup
      LoadBalancerArn:
        Ref: LoadBalancer
      Port: '80'
      Protocol: HTTP
  
  ListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
        - Type: forward
          TargetGroupArn: !Ref 'TargetGroup'
        Conditions:
        - Field: path-pattern
          Values: [/]
        ListenerArn: !Ref 'Listener'
        Priority: 1
  
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: 
        Fn::ImportValue:
          Fn::Sub: "${ProjectName}-vpc-id"

  # IAM Role and Instance Profile to allow instances read/write access to the S3 bucket 
  IAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref ProjectName
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: 'Allow'
          Principal:
            Service:
            - 'ec2.amazonaws.com'
          Action:
          - 'sts:AssumeRole'
      Policies:
        - PolicyName: s3
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - 's3:PutObject'
              - 's3:GetObject'
              Resource:
                !Sub "arn:aws:s3:::${ProjectName}-udagram-4829/*"

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: '/'
      Roles:
      - !Ref IAMRole

  # Bastion host and security group
  Bastion:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref BastionKeyName
      ImageId: !Ref BastionImageId
      SecurityGroupIds:
        - !Ref BastionSecurityGroup
      SubnetId:
        Fn::ImportValue: !Sub "${ProjectName}-public-subnet-1"
      Tags:
        - Key: Name
          Value: "Bastion Host"

  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH access to the bastion host
      VpcId:
        Fn::ImportValue:
          !Sub "${ProjectName}-vpc-id"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref BastionAccessIP

Outputs:
  LoadBalancerURL: 
    Description: Public URL of the Load Balancer
    Value: !Sub http://${LoadBalancer.DNSName}
    Export:
      Name: !Sub ${ProjectName}-lb-url

  BastionHostPublicIP:
    Description: Public IP address of the Bastion Host for SSH
    Value: !GetAtt Bastion.PublicIp
    Export:
      Name: !Sub ${ProjectName}-bastion-public-ip

  
